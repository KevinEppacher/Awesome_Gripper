<?xml version="1.0"?>
<launch>

    <!-- Argument for whether the simulation is paused or not -->
    <arg name="paused" default="false"/>
    <arg name="robot_pose" default="-x 0 -y 0 -z 0.8 -R 0 -P 0 -Y 0" doc="Pose for robot"/>

    <!-- Set the robot URDF on the parameter server -->
    <!-- <param name="robot_description" textfile="$(find urdf_6_dofra_v3)/urdf/URDF_Assembly_6_DOFRA_v3.urdf" /> -->
    <param name="robot_description" command="$(find xacro)/xacro $(find urdf_6_dofra_v3)/urdf/URDF_Assembly_6_DOFRA_v3.xacro"/>

    <!-- Unpause the simulation after loading the robot model -->
    <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

    <!-- Spawn the robot in Gazebo -->
    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" 
        args="-urdf -param robot_description -model robot $(arg unpause) $(arg robot_pose)"
        respawn="false" output="screen" />

    <!-- Load the controller parameters onto the parameter server -->
    <rosparam file="$(find six_dofra_moveit_config_v3)/config/gazebo_controllers.yaml" />
    <include file="$(find six_dofra_moveit_config_v3)/launch/ros_controllers.launch"/>

    <!-- Spawn the Gazebo ROS controllers -->
    <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />

    <!-- Publish tf for the robot links -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <!-- Launch MoveIt -->
    <include file="$(find six_dofra_moveit_config_v3)/launch/demo.launch" pass_all_args="true">
        <!-- robot_description is loaded by gazebo.launch, to enable Gazebo features -->
        <arg name="load_robot_description" value="false" />
        <arg name="moveit_controller_manager" value="ros_control" />
    </include>

</launch>
